version: "3.2"

services:
  # Command Central
  cc:
    image: ${REG}/commandcentral-builder:${TAG}
    ports:
      - "8091:8091" # CCE
      - "8092:8092" # SPM

  # Hello World sample
  hello-world:
    image: ${REG}/hello-world:${TAG}
    build:
      context: hello-world/
      args:
        - BUILDER_IMAGE=${REG}/commandcentral-builder:${TAG}
        - BASE_IMAGE=${REG}/java:${TAG}
        - __hello_name=Container        # container specific build ARG
    hostname: hello-world
    environment:
      - CC_AUTO_REGISTER
      - HELLO_NAME=CONTAINER_INSTANCE   # container specific ENV var

  # Asset Build Environment
  abe:
    image: ${REG}/abe:${TAG}
    build:
      context: abe/
      args:
        - BUILDER_IMAGE=${REG}/commandcentral-builder:${TAG}
        - BASE_IMAGE=${REG}/java:${TAG}

  # API Gateway
  apigw:
    image: ${REG}/apigw:${TAG}
    build:
      context: apigw/
      args:
        - BUILDER_IMAGE=${REG}/commandcentral-builder:${TAG}
        - BASE_IMAGE=${REG}/java:${TAG}
    ports:
      - "6555:5555"
      - "9072:9072"
    hostname: apigw
    environment:
      - CC_AUTO_REGISTER
      - apigw_elasticsearch_hosts=ids:9240
    stop_grace_period: 30s

  # Broker Server
  broker:
    image: ${REG}/broker:${TAG}
    build:
      context: broker/
      args:
        - BUILDER_IMAGE=${REG}/commandcentral-builder:${TAG}
        - BASE_IMAGE=${REG}/java:${TAG}
    ports:
      - "6849:6849"
    hostname: broker
    environment:
      - CC_AUTO_REGISTER
      - BROKER_CONFIG_SIZE=64M
      - BROKER_DATA_SIZE=512M
    volumes:
      - '../data/broker:/opt/softwareag/Broker/data'
    stop_grace_period: 30s

  # Internal Data Store (Elasticsearch)
  ids:
    image: ${REG}/ids:${TAG}
    build:
      context: ids/
      args:
        - BUILDER_IMAGE=${REG}/commandcentral-builder:${TAG}
        - BASE_IMAGE=${REG}/java:${TAG}
    ports:
      - "9240:9240"
    hostname: ids
    environment:
      - CC_AUTO_REGISTER
      - node.name=ids
      - discovery.seed_hosts=ids:9340
      - cluster.initial_master_nodes=ids
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    volumes:
      - '../data/ids:/opt/softwareag/InternalDataStore/data'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    stop_grace_period: 30s

  # Integration Server
  is:
    image: ${REG}/is:${TAG}
    build:
      context: is/
      args:
        - BUILDER_IMAGE=${REG}/commandcentral-builder:${TAG}
        - BASE_IMAGE=${REG}/java:${TAG}
    ports:
      - "5555:5555"
    hostname: is
    environment:
      - CC_AUTO_REGISTER
      - JAVA_MIN_MEM=512
      - JAVA_MAX_MEM=512
    stop_grace_period: 30s

  # Microservices Runtime
  msr:
    image: ${REG}/msr:${TAG}
    build:
      context: msr/
      args:
        - BUILDER_IMAGE=${REG}/commandcentral-builder:${TAG}
        - BASE_IMAGE=${REG}/java:${TAG}
    ports:
      - "5556:5555"
    hostname: msr
    environment:
      - CC_AUTO_REGISTER
      - JAVA_MIN_MEM=512m
      - JAVA_MAX_MEM=512m
    volumes:
      - '../data/msr/autodeploy:/opt/softwareag/IntegrationServer/replicate/autodeploy'
      - '../data/msr/application.properties:/opt/softwareag/IntegrationServer/application.properties'
    stop_grace_period: 30s

  # My webMethods Server
  mws:
    image: ${REG}/mws:${TAG}
    build:
      context: mws/
      args:
        - BUILDER_IMAGE=${REG}/commandcentral-builder:${TAG}
        - BASE_IMAGE=${REG}/java:${TAG}
    ports:
      - "8585:8585"
    hostname: mws
    environment:
      - CC_AUTO_REGISTER
      - JAVA_MIN_MEM=512
      - JAVA_MAX_MEM=512
      - MWS_DB_TYPE=postgresql
      - MWS_DB_URL=jdbc:wm:postgresql://mws-db:5432;databaseName=mws
      - MWS_DB_USERNAME=mws
      - MWS_DB_PASSWORD=mws
      - MWS_DB_NAME=mws
    stop_grace_period: 30s
    depends_on:
      - mws-db

  # My webMethods Server database (PostgreSQL)
  mws-db:
    image: postgres:10
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=mws
      - POSTGRES_PASSWORD=mws
      - POSTGRES_DB=mws
    volumes:
      - '../data/mws/db:/var/lib/postgresql/data'
    stop_grace_period: 30s

  # Terracotta Management Console
  tmc:
    image: ${REG}/tmc:${TAG}
    build:
      context: tmc/
      args:
        - BASE_IMAGE=${REG}/tsa:${TAG}
    ports:
      - "9889:9889"
    hostname: tmc
    environment:
      - TSA_URL=http://tsa:9540
    stop_grace_period: 30s
    depends_on:
      - tsa

  # Terracotta Server
  tsa:
    image: ${REG}/tsa:${TAG}
    build:
      context: tsa/
      args:
        - BUILDER_IMAGE=${REG}/commandcentral-builder:${TAG}
        - BASE_IMAGE=${REG}/java:${TAG}
    ports:
      - "9510:9510"
      - "9540:9540"
    hostname: tsa
    environment:
      - CC_AUTO_REGISTER
      - JAVA_MIN_MEM=128
      - JAVA_MAX_MEM=512
    volumes:
      - '../data/tsa/backup:/opt/softwareag/Terracotta/server/backup'
      - '../data/tsa/data:/opt/softwareag/Terracotta/server/data'
      - '../data/tsa/index:/opt/softwareag/Terracotta/server/index'
    stop_grace_period: 30s

  # Universal Messaging
  um:
    image: ${REG}/um:${TAG}
    build:
      context: um/
      args:
        - BUILDER_IMAGE=${REG}/commandcentral-builder:${TAG}
        - BASE_IMAGE=${REG}/java:${TAG}
    ports:
      - "9000:9000"
    hostname: um
    environment:
      - CC_AUTO_REGISTER
    volumes:
      - '../data/um:/opt/softwareag/UniversalMessaging/server/default/data'
    stop_grace_period: 30s
